"use strict";var __awaiter=function(a,b,c,d){function e(a){return a instanceof c?a:new c(function(b){b(a)})}return new(c||(c=Promise))(function(c,f){function g(a){try{i(d.next(a))}catch(a){f(a)}}function h(a){try{i(d["throw"](a))}catch(a){f(a)}}function i(a){a.done?c(a.value):e(a.value).then(g,h)}i((d=d.apply(a,b||[])).next())})},__generator=function(a,b){function c(a){return function(b){return d([a,b])}}function d(c){if(e)throw new TypeError("Generator is already executing.");for(;j&&(j=0,c[0]&&(k=0)),k;)try{if(e=1,h&&(i=2&c[0]?h["return"]:c[0]?h["throw"]||((i=h["return"])&&i.call(h),0):h.next)&&!(i=i.call(h,c[1])).done)return i;switch((h=0,i)&&(c=[2&c[0],i.value]),c[0]){case 0:case 1:i=c;break;case 4:return k.label++,{value:c[1],done:!1};case 5:k.label++,h=c[1],c=[0];continue;case 7:c=k.ops.pop(),k.trys.pop();continue;default:if((i=k.trys,!(i=0<i.length&&i[i.length-1]))&&(6===c[0]||2===c[0])){k=0;continue}if(3===c[0]&&(!i||c[1]>i[0]&&c[1]<i[3])){k.label=c[1];break}if(6===c[0]&&k.label<i[1]){k.label=i[1],i=c;break}if(i&&k.label<i[2]){k.label=i[2],k.ops.push(c);break}i[2]&&k.ops.pop(),k.trys.pop();continue}c=b.call(a,k)}catch(a){c=[6,a],h=0}finally{e=i=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}var e,h,i,j,k={label:0,sent:function a(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return j={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(j[Symbol.iterator]=function(){return this}),j};Object.defineProperty(exports,"__esModule",{value:!0}),exports.build=exports.run=void 0;var core_1=require("@rsbuild/core"),plugin_less_1=require("@rsbuild/plugin-less"),plugin_react_1=require("@rsbuild/plugin-react"),plugin_sass_1=require("@rsbuild/plugin-sass"),getBuildConfig=function b(a){var c=a.dev,d=!(void 0!==c)||c,e=a.less,f=!(void 0!==e)||e,g=a.sass,h=!(void 0!==g)||g,i=a.index,j=a.dist,k=void 0===j?"./dist":j,l=a.port,m=a.banner,n=void 0===m?"project":m,o=a.reactRuntime,p=void 0===o?"automatic":o,q=a.proxy,r=a.rsConfig;return(0,core_1.mergeRsbuildConfig)({mode:d?"development":"production",source:{entry:{index:i}},output:{cleanDistPath:!0,distPath:{root:k}},plugins:[(0,plugin_react_1.pluginReact)({swcReactOptions:{development:d,refresh:d,runtime:p}}),h?(0,plugin_sass_1.pluginSass)():void 0,f?(0,plugin_less_1.pluginLess)({lessLoaderOptions:{lessOptions:{javascriptEnabled:!0}}}):void 0].filter(Boolean),tools:{rspack:function c(a,b){var e=b.env;return d?(a.devtool="cheap-module-source-map",a.stats="errors-only"):a.devtool=!1,a}},// Options for local development.
dev:{progressBar:{id:n},hmr:!0,client:{protocol:"ws",host:"127.0.0.1",port:"<port>"},cliShortcuts:!1},server:{strictPort:!0,port:l,proxy:q}},r)};/**
 * Generates the build configuration for the project.
 *
 * @param {Params} options - The configuration options for the build.
 * @returns {RsbuildConfig} The rsbuild configuration object.
 *//**
 * @description Starts a rspack development server with given configurations.
 * @param {boolean} [less=true] - Whether to support LESS in the project.
 * @param {boolean} [sass=true] - Whether to support Sass in the project.
 * @param {string} [index=''] - Path to the entry file.
 * @param {string} [dist='./dist'] - Path to the output directory.
 * @param {number} [port=3000] - Port to use for the development server.
 * @param {ProxyConfig} [proxy] - Proxy configuration for the development server.
 * @param {string} [banner='web'] - Name to use for the development server.
 * @param {RsbuildConfig} [rsConfig={}] - Additional configuration for rspack.
 */function run(a){var b=a.less,c=!(void 0!==b)||b,d=a.sass,e=!(void 0!==d)||d,f=a.index,g=void 0===f?"":f,h=a.dist,i=void 0===h?"./dist":h,j=a.port,k=void 0===j?3e3:j,l=a.reactRuntime,m=a.proxy,n=a.banner,o=void 0===n?"web":n,p=a.rsConfig,q=void 0===p?{}:p;return __awaiter(this,void 0,void 0,function(){var a;return __generator(this,function(b){switch(b.label){case 0:return[4/*yield*/,(0,core_1.createRsbuild)({rsbuildConfig:getBuildConfig({dev:!0,less:c,sass:e,index:g,dist:i,port:k,reactRuntime:l,proxy:m,banner:o,rsConfig:q})})];case 1:return a=b.sent(),a.startDevServer(),[2/*return*/]}})})}exports.run=run;/**
 * @description Executes the build process for the project.
 * @param {boolean} [less=true] - Whether to support LESS in the project.
 * @param {boolean} [sass=true] - Whether to support Sass in the project.
 * @param {string} [index=''] - Path to the entry file.
 * @param {string} [dist='./dist'] - Path to the output directory.
 * @param {string} [reactRuntime='automatic'] - JSX runtime to use.
 * @param {RsbuildConfig} [rsConfig={}] - Additional configuration for rspack.
 */function build(a){var b=a.less,c=!(void 0!==b)||b,d=a.sass,e=!(void 0!==d)||d,f=a.index,g=void 0===f?"":f,h=a.dist,i=void 0===h?"./dist":h,j=a.reactRuntime,k=a.rsConfig,l=void 0===k?{}:k;return __awaiter(this,void 0,void 0,function(){var a;return __generator(this,function(b){switch(b.label){case 0:return[4/*yield*/,(0,core_1.createRsbuild)({rsbuildConfig:getBuildConfig({dev:!1,less:c,sass:e,index:g,dist:i,reactRuntime:j,banner:"build",rsConfig:l})})];case 1:return a=b.sent(),a.build(),[2/*return*/]}})})}exports.build=build;